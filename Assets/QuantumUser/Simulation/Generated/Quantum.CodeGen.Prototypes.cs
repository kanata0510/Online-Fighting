// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<Int32, BlendTreeWeights>))]
  public unsafe class DictionaryEntry_Int32_BlendTreeWeights : Quantum.Prototypes.DictionaryEntry {
    public Int32 Key;
    public Quantum.Prototypes.BlendTreeWeightsPrototype Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AnimatorComponent))]
  public unsafe class AnimatorComponentPrototype : ComponentPrototype<Quantum.AnimatorComponent> {
    public AssetRef<AnimatorGraph> AnimatorGraph;
    public MapEntityId Self;
    [HideInInspector()]
    public FP Time;
    [HideInInspector()]
    public FP NormalizedTime;
    [HideInInspector()]
    public FP LastTime;
    [HideInInspector()]
    public FP Length;
    [HideInInspector()]
    public Int32 CurrentStateId;
    [HideInInspector()]
    public QBoolean Freeze;
    [HideInInspector()]
    public FP Speed;
    [HideInInspector()]
    public Int32 FromStateId;
    [HideInInspector()]
    public FP FromStateTime;
    [HideInInspector()]
    public FP FromStateLastTime;
    [HideInInspector()]
    public FP FromStateNormalizedTime;
    [HideInInspector()]
    public FP FromLength;
    [HideInInspector()]
    public Int32 ToStateId;
    [HideInInspector()]
    public FP ToStateTime;
    [HideInInspector()]
    public FP ToStateLastTime;
    [HideInInspector()]
    public FP ToStateNormalizedTime;
    [HideInInspector()]
    public FP ToLength;
    [HideInInspector()]
    public Int32 TransitionIndex;
    [HideInInspector()]
    public FP TransitionTime;
    [HideInInspector()]
    public FP TransitionDuration;
    [HideInInspector()]
    public Int32 AnimatorBlendCount;
    public QBoolean IgnoreTransitions;
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AnimatorRuntimeVariablePrototype[] AnimatorVariables = {};
    [HideInInspector()]
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_Int32_BlendTreeWeights[] BlendTreeWeights = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AnimatorComponent component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AnimatorComponent result, in PrototypeMaterializationContext context = default) {
        result.AnimatorGraph = this.AnimatorGraph;
        PrototypeValidator.FindMapEntity(this.Self, in context, out result.Self);
        result.Time = this.Time;
        result.NormalizedTime = this.NormalizedTime;
        result.LastTime = this.LastTime;
        result.Length = this.Length;
        result.CurrentStateId = this.CurrentStateId;
        result.Freeze = this.Freeze;
        result.Speed = this.Speed;
        result.FromStateId = this.FromStateId;
        result.FromStateTime = this.FromStateTime;
        result.FromStateLastTime = this.FromStateLastTime;
        result.FromStateNormalizedTime = this.FromStateNormalizedTime;
        result.FromLength = this.FromLength;
        result.ToStateId = this.ToStateId;
        result.ToStateTime = this.ToStateTime;
        result.ToStateLastTime = this.ToStateLastTime;
        result.ToStateNormalizedTime = this.ToStateNormalizedTime;
        result.ToLength = this.ToLength;
        result.TransitionIndex = this.TransitionIndex;
        result.TransitionTime = this.TransitionTime;
        result.TransitionDuration = this.TransitionDuration;
        result.AnimatorBlendCount = this.AnimatorBlendCount;
        result.IgnoreTransitions = this.IgnoreTransitions;
        if (this.AnimatorVariables.Length == 0) {
          result.AnimatorVariables = default;
        } else {
          var list = frame.AllocateList(out result.AnimatorVariables, this.AnimatorVariables.Length);
          for (int i = 0; i < this.AnimatorVariables.Length; ++i) {
            Quantum.AnimatorRuntimeVariable tmp = default;
            this.AnimatorVariables[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        if (this.BlendTreeWeights.Length == 0) {
          result.BlendTreeWeights = default;
        } else {
          var dict = frame.AllocateDictionary(out result.BlendTreeWeights, this.BlendTreeWeights.Length);
          for (int i = 0; i < this.BlendTreeWeights.Length; ++i) {
            Int32 tmpKey = default;
            Quantum.BlendTreeWeights tmpValue = default;
            tmpKey = this.BlendTreeWeights[i].Key;
            this.BlendTreeWeights[i].Value.Materialize(frame, ref tmpValue, in context);
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AnimatorRuntimeVariable))]
  public unsafe partial class AnimatorRuntimeVariablePrototype : UnionPrototype {
    public string _field_used_;
    public FP FPValue;
    public Int32 IntegerValue;
    public QBoolean BooleanValue;
    partial void MaterializeUser(Frame frame, ref Quantum.AnimatorRuntimeVariable result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AnimatorRuntimeVariable result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "FPVALUE": *result.FPValue = this.FPValue; break;
          case "INTEGERVALUE": *result.IntegerValue = this.IntegerValue; break;
          case "BOOLEANVALUE": *result.BooleanValue = this.BooleanValue; break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BlendTreeWeights))]
  public unsafe partial class BlendTreeWeightsPrototype : StructPrototype {
    [DynamicCollectionAttribute()]
    public FP[] Values = {};
    partial void MaterializeUser(Frame frame, ref Quantum.BlendTreeWeights result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BlendTreeWeights result, in PrototypeMaterializationContext context = default) {
        if (this.Values.Length == 0) {
          result.Values = default;
        } else {
          var list = frame.AllocateList(out result.Values, this.Values.Length);
          for (int i = 0; i < this.Values.Length; ++i) {
            FP tmp = default;
            tmp = this.Values[i];
            list.Add(tmp);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Input))]
  public unsafe partial class InputPrototype : StructPrototype {
    public Button Fire;
    public FPVector2 MoveDirection;
    partial void MaterializeUser(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context = default) {
        result.Fire = this.Fire;
        result.MoveDirection = this.MoveDirection;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KCC))]
  public unsafe class KCCPrototype : ComponentPrototype<Quantum.KCC> {
    public AssetRef<KCCSettings> Settings;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.KCC component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.KCC result, in PrototypeMaterializationContext context = default) {
        result.Settings = this.Settings;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KCCCollision))]
  public unsafe class KCCCollisionPrototype : StructPrototype {
    public Quantum.QEnum8<EKCCCollisionSource> Source;
    public MapEntityId Reference;
    public AssetRef Processor;
    public void Materialize(Frame frame, ref Quantum.KCCCollision result, in PrototypeMaterializationContext context = default) {
        result.Source = this.Source;
        PrototypeValidator.FindMapEntity(this.Reference, in context, out result.Reference);
        result.Processor = this.Processor;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KCCData))]
  public unsafe partial class KCCDataPrototype : StructPrototype {
    public QBoolean IsActive;
    public FP LookPitch;
    public FP LookYaw;
    public FPVector3 BasePosition;
    public FPVector3 DesiredPosition;
    public FPVector3 TargetPosition;
    public FP DeltaTime;
    public FPVector3 InputDirection;
    public FPVector3 JumpImpulse;
    public FPVector3 Gravity;
    public FP MaxGroundAngle;
    public FP MaxWallAngle;
    public FP MaxHangAngle;
    public FPVector3 ExternalImpulse;
    public FPVector3 ExternalForce;
    public FPVector3 ExternalDelta;
    public FP KinematicSpeed;
    public FPVector3 KinematicTangent;
    public FPVector3 KinematicDirection;
    public FPVector3 KinematicVelocity;
    public FPVector3 DynamicVelocity;
    public FP RealSpeed;
    public FPVector3 RealVelocity;
    public QBoolean HasJumped;
    public QBoolean HasTeleported;
    public QBoolean IsGrounded;
    public QBoolean WasGrounded;
    public QBoolean IsSteppingUp;
    public QBoolean WasSteppingUp;
    public QBoolean IsSnappingToGround;
    public QBoolean WasSnappingToGround;
    public FPVector3 GroundNormal;
    public FPVector3 GroundTangent;
    public FPVector3 GroundPosition;
    public FP GroundDistance;
    public FP GroundAngle;
    partial void MaterializeUser(Frame frame, ref Quantum.KCCData result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.KCCData result, in PrototypeMaterializationContext context = default) {
        result.IsActive = this.IsActive;
        result.LookPitch = this.LookPitch;
        result.LookYaw = this.LookYaw;
        result.BasePosition = this.BasePosition;
        result.DesiredPosition = this.DesiredPosition;
        result.TargetPosition = this.TargetPosition;
        result.DeltaTime = this.DeltaTime;
        result.InputDirection = this.InputDirection;
        result.JumpImpulse = this.JumpImpulse;
        result.Gravity = this.Gravity;
        result.MaxGroundAngle = this.MaxGroundAngle;
        result.MaxWallAngle = this.MaxWallAngle;
        result.MaxHangAngle = this.MaxHangAngle;
        result.ExternalImpulse = this.ExternalImpulse;
        result.ExternalForce = this.ExternalForce;
        result.ExternalDelta = this.ExternalDelta;
        result.KinematicSpeed = this.KinematicSpeed;
        result.KinematicTangent = this.KinematicTangent;
        result.KinematicDirection = this.KinematicDirection;
        result.KinematicVelocity = this.KinematicVelocity;
        result.DynamicVelocity = this.DynamicVelocity;
        result.RealSpeed = this.RealSpeed;
        result.RealVelocity = this.RealVelocity;
        result.HasJumped = this.HasJumped;
        result.HasTeleported = this.HasTeleported;
        result.IsGrounded = this.IsGrounded;
        result.WasGrounded = this.WasGrounded;
        result.IsSteppingUp = this.IsSteppingUp;
        result.WasSteppingUp = this.WasSteppingUp;
        result.IsSnappingToGround = this.IsSnappingToGround;
        result.WasSnappingToGround = this.WasSnappingToGround;
        result.GroundNormal = this.GroundNormal;
        result.GroundTangent = this.GroundTangent;
        result.GroundPosition = this.GroundPosition;
        result.GroundDistance = this.GroundDistance;
        result.GroundAngle = this.GroundAngle;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KCCIgnore))]
  public unsafe class KCCIgnorePrototype : StructPrototype {
    public Quantum.QEnum8<EKCCIgnoreSource> Source;
    public MapEntityId Reference;
    public void Materialize(Frame frame, ref Quantum.KCCIgnore result, in PrototypeMaterializationContext context = default) {
        result.Source = this.Source;
        PrototypeValidator.FindMapEntity(this.Reference, in context, out result.Reference);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KCCModifier))]
  public unsafe class KCCModifierPrototype : StructPrototype {
    public AssetRef Processor;
    public MapEntityId Entity;
    public void Materialize(Frame frame, ref Quantum.KCCModifier result, in PrototypeMaterializationContext context = default) {
        result.Processor = this.Processor;
        PrototypeValidator.FindMapEntity(this.Entity, in context, out result.Entity);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KCCProcessorLink))]
  public unsafe partial class KCCProcessorLinkPrototype : ComponentPrototype<Quantum.KCCProcessorLink> {
    public AssetRef<KCCProcessor> Processor;
    partial void MaterializeUser(Frame frame, ref Quantum.KCCProcessorLink result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.KCCProcessorLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.KCCProcessorLink result, in PrototypeMaterializationContext context = default) {
        result.Processor = this.Processor;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerCharacter))]
  public unsafe partial class PlayerCharacterPrototype : ComponentPrototype<Quantum.PlayerCharacter> {
    public FP PlayerHP;
    public Int32 PlayerNumber;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerCharacter result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerCharacter component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerCharacter result, in PrototypeMaterializationContext context = default) {
        result.PlayerHP = this.PlayerHP;
        result.PlayerNumber = this.PlayerNumber;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerLink))]
  public unsafe partial class PlayerLinkPrototype : ComponentPrototype<Quantum.PlayerLink> {
    public PlayerRef PlayerRef;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context = default) {
        result.PlayerRef = this.PlayerRef;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Punch))]
  public unsafe partial class PunchPrototype : ComponentPrototype<Quantum.Punch> {
    public FP RecoveryTime;
    public FP AnimationRecoveryTime;
    public AssetRef<PunchConfig> PunchConfig;
    partial void MaterializeUser(Frame frame, ref Quantum.Punch result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Punch component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Punch result, in PrototypeMaterializationContext context = default) {
        result.RecoveryTime = this.RecoveryTime;
        result.AnimationRecoveryTime = this.AnimationRecoveryTime;
        result.PunchConfig = this.PunchConfig;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PunchRef))]
  public unsafe partial class PunchRefPrototype : ComponentPrototype<Quantum.PunchRef> {
    public Int32 PlayerNumber;
    public FP DestroyTime;
    partial void MaterializeUser(Frame frame, ref Quantum.PunchRef result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PunchRef component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PunchRef result, in PrototypeMaterializationContext context = default) {
        result.PlayerNumber = this.PlayerNumber;
        result.DestroyTime = this.DestroyTime;
        MaterializeUser(frame, ref result, in context);
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
